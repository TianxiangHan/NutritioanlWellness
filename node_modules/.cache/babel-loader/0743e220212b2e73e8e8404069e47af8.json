{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OEM\\\\OneDrive\\\\Documents\\\\Web Development\\\\React\\\\React template\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport Swiper, { Navigation, Pagination } from 'swiper'; // import Swiper and modules styles\n\nimport 'swiper-bundle.min.css';\nimport 'swiper/css/pagination';\nvar swiper = new Swiper('.clients-slider', {\n  speed: 400,\n  loop: true,\n  autoplay: {\n    delay: 5000,\n    disableOnInteraction: false\n  },\n  slidesPerView: 'auto',\n  pagination: {\n    el: '.swiper-pagination',\n    type: 'bullets',\n    clickable: true\n  },\n  breakpoints: {\n    320: {\n      slidesPerView: 2,\n      spaceBetween: 40\n    },\n    480: {\n      slidesPerView: 3,\n      spaceBetween: 60\n    },\n    640: {\n      slidesPerView: 4,\n      spaceBetween: 80\n    },\n    992: {\n      slidesPerView: 6,\n      spaceBetween: 120\n    }\n  }\n});\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 4\n  }\n}), document.getElementById(\"root\")); //CHALLENGE:\n//1. Implement the add note functionality.\n//- Create a constant that keeps track of the title and content.\n//- Pass the new note back to the App.\n//- Add new note to an array.\n//- Take array and render seperate Note components for each item.\n//2. Implement the delete note functionality.\n//- Callback from the Note component to trigger a delete function.\n//- Use the filter function to filter out the item that needs deletion.\n//- Pass a id over to the Note component, pass it back to the App when deleting.\n//This is the end result you're aiming for:\n//https://pogqj.csb.app/","map":{"version":3,"sources":["C:/Users/OEM/OneDrive/Documents/Web Development/React/React template/src/index.js"],"names":["React","ReactDOM","App","Swiper","Navigation","Pagination","swiper","speed","loop","autoplay","delay","disableOnInteraction","slidesPerView","pagination","el","type","clickable","breakpoints","spaceBetween","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AAGA,OAAOC,MAAP,IAAiBC,UAAjB,EAA6BC,UAA7B,QAA+C,QAA/C,C,CACA;;AACA,OAAO,uBAAP;AACA,OAAO,uBAAP;AAEA,IAAMC,MAAM,GAAC,IAAIH,MAAJ,CAAW,iBAAX,EAA8B;AACvCI,EAAAA,KAAK,EAAE,GADgC;AAEvCC,EAAAA,IAAI,EAAE,IAFiC;AAGvCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAE,IADC;AAERC,IAAAA,oBAAoB,EAAE;AAFd,GAH6B;AAOvCC,EAAAA,aAAa,EAAE,MAPwB;AAQvCC,EAAAA,UAAU,EAAE;AACVC,IAAAA,EAAE,EAAE,oBADM;AAEVC,IAAAA,IAAI,EAAE,SAFI;AAGVC,IAAAA,SAAS,EAAE;AAHD,GAR2B;AAavCC,EAAAA,WAAW,EAAE;AACX,SAAK;AACHL,MAAAA,aAAa,EAAE,CADZ;AAEHM,MAAAA,YAAY,EAAE;AAFX,KADM;AAKX,SAAK;AACHN,MAAAA,aAAa,EAAE,CADZ;AAEHM,MAAAA,YAAY,EAAE;AAFX,KALM;AASX,SAAK;AACHN,MAAAA,aAAa,EAAE,CADZ;AAEHM,MAAAA,YAAY,EAAE;AAFX,KATM;AAaX,SAAK;AACHN,MAAAA,aAAa,EAAE,CADZ;AAEHM,MAAAA,YAAY,EAAE;AAFX;AAbM;AAb0B,CAA9B,CAAb;AAiCAjB,QAAQ,CAACkB,MAAT,eAEG,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFH,EAKEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CALF,E,CAOA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\n\nimport Swiper, { Navigation, Pagination } from 'swiper';\n// import Swiper and modules styles\nimport 'swiper-bundle.min.css';\nimport 'swiper/css/pagination';\n\nconst swiper=new Swiper('.clients-slider', {\n    speed: 400,\n    loop: true,\n    autoplay: {\n      delay: 5000,\n      disableOnInteraction: false\n    },\n    slidesPerView: 'auto',\n    pagination: {\n      el: '.swiper-pagination',\n      type: 'bullets',\n      clickable: true\n    },\n    breakpoints: {\n      320: {\n        slidesPerView: 2,\n        spaceBetween: 40\n      },\n      480: {\n        slidesPerView: 3,\n        spaceBetween: 60\n      },\n      640: {\n        slidesPerView: 4,\n        spaceBetween: 80\n      },\n      992: {\n        slidesPerView: 6,\n        spaceBetween: 120\n      }\n    }\n  });\n\nReactDOM.render(\n\n   <App />\n\n   \n, document.getElementById(\"root\"));\n\n//CHALLENGE:\n//1. Implement the add note functionality.\n//- Create a constant that keeps track of the title and content.\n//- Pass the new note back to the App.\n//- Add new note to an array.\n//- Take array and render seperate Note components for each item.\n\n//2. Implement the delete note functionality.\n//- Callback from the Note component to trigger a delete function.\n//- Use the filter function to filter out the item that needs deletion.\n//- Pass a id over to the Note component, pass it back to the App when deleting.\n\n//This is the end result you're aiming for:\n//https://pogqj.csb.app/\n"]},"metadata":{},"sourceType":"module"}